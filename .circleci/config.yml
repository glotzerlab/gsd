version: 2.1

executors:
  glotzerlab:
    parameters:
      image:
        type: string
      python-version:
        type: string
    docker:
      - image: glotzerlab/ci:2018.10-<< parameters.image >>
    environment:
      PYTHONPATH: /home/ci/project/build
      PYTHON: "/usr/bin/python<< parameters.python-version >>"
      PYTEST: "/usr/bin/python<< parameters.python-version >> -m pytest"
    working_directory: /home/ci/project

commands:
  build:
    parameters:
      cc:
        type: string
      cxx:
        type: string
      cmake:
        type: string
    steps:
      - checkout:
          path: code
      - run:
          name: Configure
          command: export CC=<< parameters.cc >> CXX=<< parameters.cxx >> && mkdir build && cd build && << parameters.cmake >> ../code -DPYTHON_EXECUTABLE=${PYTHON} -DCYTHON_EXECUTABLE=`which cython3` -GNinja
      - run:
          name: Compile
          command: cd build && ninja

  test:
    steps:
      - run:
          name: Unit test
          command: mkdir test-results && cd code/tests && ${PYTEST} --junit-xml=/home/ci/project/test-results/test.xml
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  sphinx:
    steps:
      - run: cd code/doc && sphinx-build -b html -d _build/doctrees -W -n . _build/html


jobs:
  build_and_test:
    parameters:
      image:
        type: string
      cc:
        type: string
      cxx:
        type: string
      python-version:
        type: string
      build-docs:
        default: false
        type: boolean
      cmake:
        default: /usr/bin/cmake
        type: string
    executor:
      name: glotzerlab
      image: << parameters.image >>
      python-version: << parameters.python-version >>
    steps:
      - build:
          cc: << parameters.cc >>
          cxx: << parameters.cxx >>
          cmake: << parameters.cmake >>
      - test
      - when:
          condition: << parameters.build-docs >>
          steps:
            - sphinx:

  pypi-sdist:
    executor:
      name: glotzerlab
      image: ubuntu18.04
      python-version: "3.6"
    steps:
      - checkout:
          path: code
      - run:
          name: Build sdist
          working_directory: code
          command: python3 setup.py sdist
      - run:
          name: Upload
          working_directory: code
          command: twine upload --username joaander --password ${PYPI_PASSWORD} dist/*

  pypi-wheels:
    docker:
      - image: quay.io/pypa/manylinux1_x86_64
    steps:
      - checkout:
          path: /root/code
      - run:
          name: Compile wheels
          working_directory: /root/code
          command: |
            for PYBIN in /opt/python/*/bin; do
                echo Building for `${PYBIN}/python --version`
                "${PYBIN}/pip" install numpy --progress-bar=off
                "${PYBIN}/pip" wheel . -w wheelhouse/ --no-deps --progress-bar=off
            done
            ls wheelhouse

      - run:
          name: Test wheels
          working_directory: /root/code
          command: |
            for PYBIN in /opt/python/cp3*/bin/; do
                echo Testing `${PYBIN}/python --version`
                "${PYBIN}/pip" install nose --progress-bar=off
                "${PYBIN}/pip" install gsd --no-index -f wheelhouse --progress-bar=off
                "${PYBIN}/nosetests"
            done

      - run:
          name: Upload
          working_directory: /root/code
          command: twine upload --username joaander --password ${PYPI_PASSWORD} wheelhouse/*

workflows:
  test:
    jobs:
      - build_and_test:
          name: gcc8-py36
          image: ubuntu18.04
          cc: gcc-8
          cxx: g++-8
          python-version: "3.6"

      - build_and_test:
          name: gcc7-py36-docs
          image: ubuntu18.04
          cc: gcc-7
          cxx: g++-7
          python-version: "3.6"
          build-docs: true

      - build_and_test:
          name: gcc6-py36
          image: ubuntu18.04
          cc: gcc-6
          cxx: g++-6
          python-version: "3.6"

      - build_and_test:
          name: clang6-py36
          image: ubuntu18.04
          cc: clang-6.0
          cxx: clang++-6.0
          python-version: "3.6"

      - build_and_test:
          name: clang5-py36
          image: ubuntu18.04
          cc: clang-5.0
          cxx: clang++-5.0
          python-version: "3.6"

      - build_and_test:
          name: clang4-py36
          image: ubuntu18.04
          cc: clang-4.0
          cxx: clang++-4.0
          python-version: "3.6"

      - build_and_test:
          name: gcc5-py35
          image: ubuntu16.04
          cc: gcc-5
          cxx: g++-5
          python-version: "3.5"

      - build_and_test:
          name: clang38-py35
          image: ubuntu16.04
          cc: clang-3.8
          cxx: clang++-3.8
          python-version: "3.5"

      - build_and_test:
          name: gcc48-py35-cm28
          image: ubuntu16.04
          cc: gcc-4.8
          cxx: g++-4.8
          python-version: "3.5"
          cmake: /opt/cmake-2.8.12/bin/cmake

  deploy:
    jobs:
      - pypi-sdist:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - pypi-wheels:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
