variables:
  image_root: glotzerlab/ci:2021.03
  python: python3
  pytest_options:

# Trigger on PRs into stable branches.
pr:
  - maint
  - master

# Do not trigger on every push. This runs every commit twice for PRs with branches on the main
# repository.
trigger: none

# Instead, trigger periodic builds on active branches.
schedules:
  - cron: "0 3-21/6 * * *"
    displayName: Periodic build
    branches:
      include:
      - "*"

stages:
- stage: pip_install
  displayName: Pip install
  dependsOn: []

  jobs:
  - job: win_pip
    displayName: Win (pip)

    variables:
      python: $(Build.BinariesDirectory)\venv\Scripts\python

    strategy:
      matrix:
        vs2017_py37_x64:
          win_image: vs2017-win2016
          python_version: 3.7
          CMAKE_GENERATOR: Visual Studio 15 2017
          CMAKE_GENERATOR_PLATFORM: x64
          architecture: 'x64'
        vs2019_py39_x64:
          win_image: windows-2019
          python_version: 3.9
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          architecture: 'x64'
        vs2019_py38_x64:
          win_image: windows-2019
          python_version: 3.8
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          architecture: 'x64'
        vs2019_py37_x64:
          win_image: windows-2019
          python_version: 3.7
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          architecture: 'x64'
        vs2019_py36_x64:
          win_image: windows-2019
          python_version: 3.6
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: x64
          architecture: 'x64'
        vs2019_py37_x32:
          win_image: windows-2019
          python_version: 3.7
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: Win32
          architecture: 'x86'
          pytest_options: --ignore-glob="*_largefile.py"

    pool:
      vmImage: '$(win_image)'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python_version)
        addToPath: true
        architecture: $(architecture)
    - powershell: python -m venv $(Build.BinariesDirectory)/venv
      displayName: Create venv
    - powershell: $(python) -m pip install -U pip
      displayName: Upgrade pip
    - powershell: $(python) -m pip --disable-pip-version-check install numpy cython pytest
      displayName: Pip install prereqs
    - powershell: $(python) -m pip install --no-build-isolation --no-use-pep517 .
      displayName: Pip install gsd
    - template: templates/unit_test.yml

  - job: linux_pip
    displayName: Linux (pip)

    strategy:
      matrix:
        gcc10_py39:
          unused: ""
        gcc9_py38:
          unused: ""
        gcc7_py37:
          unused: ""
        gcc7_py36:
          unused: ""

    pool:
      vmImage: 'ubuntu-latest'

    container:
      image: $(image_root)-$(System.JobName)
      options: -u 0

    steps:
    - script: sudo $(python) -m pip install --no-build-isolation --no-use-pep517 .
      displayName: Pip install gsd
    - template: templates/unit_test.yml

  - job: mac_pip
    displayName: Mac (pip)

    strategy:
      matrix:
        mac10_14:
          mac_image: macOS-10.14

        mac10_15:
          mac_image: macOS-10.15

    pool:
      vmImage: '$(mac_image)'

    steps:
    - script: brew install python cmake ninja
      displayName: Brew install prereqs
    - script: $(python) -m pip install -U pip
      displayName: Upgrade pip
    - script: $(python) -m pip --disable-pip-version-check install numpy cython pytest
      displayName: Pip install prereqs
    - script: $(python) -m pip install --user --no-build-isolation --no-use-pep517 .
      displayName: Pip install gsd
    - template: templates/unit_test.yml
