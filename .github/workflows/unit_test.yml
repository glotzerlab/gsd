name: Unit test

on:
  # Trigger on pull requests.
  pull_request:

  # Trigger on pushes to the mainline branches and version tags. This prevents building commits
  # twice when the pull request source branch is in the same repository.
  push:
    branches:
      - "maint"
      - "master"

  # Trigger on request.
  workflow_dispatch:

env:
  pytest_options: -p gsd.pytest_plugin_validate --validate

jobs:
  unit_test_linux:
    name: Unit test on ${{ matrix.image }}
    runs-on: ubuntu-latest
    container:
      image: glotzerlab/ci:2021.03-${{ matrix.image }}
      options: -u 0
    strategy:
      matrix:
        image: [clang11_py39,
                gcc10_py39,
                gcc9_py38,
                clang10_py38,
                clang9_py38,
                clang8_py38,
                clang7_py38,
                gcc8_py37,
                gcc7_py37,
                clang6_py37,
                gcc7_py36]

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Configure
        run: mkdir -p build && cd build && cmake ../ -GNinja
      - name: Build
        run: ninja
        working-directory: build
      - name: Run tets
        run: python3 -m pytest --pyargs gsd ${pytest_options} -v --log-level=DEBUG
        working-directory: ${{ runner.temp }}
        env:
          PYTHONPATH: ${{ github.workspace }}/build

  unit_test_mac:
    name: Unit test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]

    steps:
      - uses: actions/checkout@v2.3.4
      - name: Take ownership of conda installation
        run: sudo chown -R ${USER} ${CONDA}
      - name: Create conda environment
        run: ${CONDA}/bin/conda env create --quiet --prefix=${{ runner.temp }}/conda --file .github/environment.yml
      - name: Add conda to PATH
        run: echo "${{ runner.temp }}/conda/bin" >> $GITHUB_PATH
      - name: Configure
        run: mkdir -p build && cd build && cmake ../ -GNinja
      - name: Build
        run: ninja
        working-directory: build
      - name: Run tets
        run: python3 -m pytest --pyargs gsd ${pytest_options} -v --log-level=DEBUG
        working-directory: ${{ runner.temp }}
        env:
          PYTHONPATH: ${{ github.workspace }}/build
